{"version":3,"sources":["webpack:///./src/api/notes.js","webpack:///./src/components/NoteEditor.js","webpack:///./src/components/Note.js","webpack:///./src/components/NotesGrid.js","webpack:///./src/containers/App.js","webpack:///./src/app.js"],"names":["NOTES","id","text","title","__webpack_require__","NoteEditor","props","handleTextChange","handleNoteAdd","handleTitleChange","_react2","default","createElement","className","type","placeholder","value","onChange","rows","onClick","propTypes","PropTypes","string","isRequired","func","_react","_propTypes","Note","state","isVisible","handleDelete","_this","handleNoteDelete","handleHide","setState","_props","this","children","Component","number","NotesGrid","notes","map","note","_Note2","key","array","_NotesGrid","_NoteEditor","_notes","App","componentDidMount","savedNotes","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","prevState","saveToLocalStorage","e","target","Date","now","concat","_toConsumableArray","clearText","stringify","setItem","filter","_NoteEditor2","_NotesGrid2","_reactHotLoader","hot","module","ReactDom","render","_App2","document","querySelector"],"mappings":"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","file":"js/main.695930.bundle.js","sourcesContent":["export const NOTES = [\n    {\n        id: 1,\n        text: 'First test note',\n        title: 'First title'\n    },\n    {\n        id: 2,\n        text: 'Second test note',\n        title: 'Second title'\n    }\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './NoteEditor.scss'\n\nconst NoteEditor = (props) => {\n    const { text, handleTextChange, handleNoteAdd, title, handleTitleChange } = props\n\n    return (\n        <div className='NoteEditor'>\n            <input\n                type='text'\n                placeholder='Enter title'\n                className='NoteEditor__input'\n                value={title}\n                onChange={handleTitleChange}\n            />\n            <textarea\n                rows={5}\n                placeholder='Enter note'\n                className='NoteEditor__textarea'\n                value={text}\n                onChange={handleTextChange}\n            />\n            <button\n                className='NoteEditor__button'\n                onClick={handleNoteAdd}\n            >\n                Add note\n            </button>\n        </div>\n    )\n}\n\nNoteEditor.propTypes = {\n    text: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handleTitleChange: PropTypes.func.isRequired,\n    handleNoteAdd: PropTypes.func.isRequired\n}\n\nexport default NoteEditor\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Note.scss'\n\nclass Note extends Component {\n    state = {\n        isVisible: true\n    }\n\n    handleDelete = () => this.props.handleNoteDelete(this.props.id)\n\n    handleHide = () => this.setState({ isVisible: !this.state.isVisible })\n\n    render() {\n        const { children, title } = this.props\n\n        return (\n            <div className='Note'>\n                <span\n                    className='Note__delete'\n                    onClick={this.handleDelete}\n                >\n                    &#10005;\n                </span>\n                <div\n                    className='Note__title'\n                    onClick={this.handleHide}\n                >\n                    {title}\n                </div>\n                {\n                    this.state.isVisible &&\n                    <div className='Note__text'>{children}</div>\n                }\n            </div>\n        )\n    }\n}\n\nNote.propTypes = {\n    children: PropTypes.string.isRequired,\n    handleNoteDelete: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired\n}\n\nexport default Note\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Note from './Note'\n\nconst NotesGrid = (props) => {\n    const { notes, handleNoteDelete } = props\n\n    return (\n        <div className='NotesGrid'>\n            {\n                notes.map(note => {\n                    return <Note\n                        key={note.id}\n                        id={note.id}\n                        title={note.title}\n                        handleNoteDelete={handleNoteDelete}\n                    >\n                        {note.text}\n                    </Note>\n                })\n            }\n        </div>\n    )\n}\n\nNotesGrid.propTypes = {\n    notes: PropTypes.array.isRequired,\n    handleNoteDelete: PropTypes.func.isRequired\n}\n\nexport default NotesGrid\n","import React, { Component } from 'react'\n\nimport NotesGrid from '../components/NotesGrid'\nimport NoteEditor from '../components/NoteEditor'\n\nimport { NOTES } from '../api/notes'\n\nimport './App.scss'\n\nclass App extends Component {\n    state = {\n        notes: NOTES,\n        text: '',\n        title: ''\n    }\n\n    componentDidMount = () => {\n        const savedNotes = JSON.parse(localStorage.getItem('notes'))\n\n        if (savedNotes) {\n            this.setState({ notes: savedNotes })\n        }\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevState.notes !== this.state.notes) {\n            this.saveToLocalStorage()\n        }\n    }\n\n    handleTextChange = (e) => {\n        this.setState({ text: e.target.value })\n    }\n\n    handleTitleChange = (e) => {\n        this.setState({ title: e.target.value })\n    }\n\n    handleNoteAdd = () => {\n        if (this.state.text && this.state.title) {\n            const note = {\n                text: this.state.text,\n                id: Date.now(),\n                title: this.state.title\n            }\n\n            this.setState({\n                notes: [note, ...this.state.notes]\n            })\n\n            this.clearText()\n        }\n    }\n\n    clearText = () => {\n        this.setState({ text: '', title: '' })\n    }\n\n    saveToLocalStorage = () => {\n        const notes = JSON.stringify(this.state.notes)\n\n        localStorage.setItem('notes', notes)\n    }\n\n    handleNoteDelete = (id) => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== id)\n        })\n    }\n\n    render() {\n        return (\n            <section className='App'>\n                <h1>React Notes</h1>\n\n                <NoteEditor\n                    title={this.state.title}\n                    text={this.state.text}\n                    handleTextChange={this.handleTextChange}\n                    handleTitleChange={this.handleTitleChange}\n                    handleNoteAdd={this.handleNoteAdd}\n                />\n\n                <NotesGrid\n                    notes={this.state.notes}\n                    handleNoteDelete={this.handleNoteDelete}\n                />\n            </section>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport { hot } from 'react-hot-loader'\n\nimport App from './containers/App'\n\nhot(module)(App)\n\nReactDom.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}