{"version":3,"sources":["webpack:///./src/api/notes.js","webpack:///./src/components/NoteEditor.js","webpack:///./src/components/Note.js","webpack:///./src/components/NotesGrid.js","webpack:///./src/containers/App.js","webpack:///./src/app.js"],"names":["NOTES","id","text","__webpack_require__","NoteEditor","props","handleTextChange","handleNoteAdd","_react2","default","createElement","className","rows","placeholder","value","onChange","onClick","propTypes","PropTypes","string","isRequired","func","Note","children","handleNoteDelete","number","NotesGrid","notes","map","note","_Note2","key","array","_react","_NotesGrid","_NoteEditor","_notes","App","state","componentDidMount","savedNotes","JSON","parse","localStorage","getItem","_this","setState","componentDidUpdate","prevProps","prevState","saveToLocalStorage","e","target","Date","now","concat","_toConsumableArray","clearText","stringify","setItem","filter","_NoteEditor2","this","_NotesGrid2","Component","_reactHotLoader","hot","module","ReactDom","render","_App2","document","querySelector"],"mappings":"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","file":"js/main.df4dc1.bundle.js","sourcesContent":["export const NOTES = [\n    {\n        id: 1,\n        text: 'First test note'\n    },\n    {\n        id: 2,\n        text: 'Second test note'\n    }\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './NoteEditor.scss'\n\nconst NoteEditor = (props) => {\n    const { text, handleTextChange, handleNoteAdd } = props\n\n    return (\n        <div className='NoteEditor'>\n            <textarea\n                rows={5}\n                placeholder='Enter note'\n                className='NoteEditor__textarea'\n                value={text}\n                onChange={handleTextChange}\n            />\n            <button\n                className='NoteEditor__button'\n                onClick={handleNoteAdd}\n            >\n                Add note\n            </button>\n        </div>\n    )\n}\n\nNoteEditor.propTypes = {\n    text: PropTypes.string.isRequired,\n    handleTextChange: PropTypes.func.isRequired,\n    handleNoteAdd: PropTypes.func.isRequired\n}\n\nexport default NoteEditor\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Note.scss'\n\nconst Note = (props) => {\n    const { children, handleNoteDelete, id } = props\n\n    const handleDelete = () => handleNoteDelete(id)\n\n    return (\n        <div className='Note'>\n            <span\n                className='Note__delete'\n                onClick={handleDelete}\n            >\n                &#10005;\n            </span>\n            {children}\n        </div>\n    )\n}\n\nNote.propTypes = {\n    children: PropTypes.string.isRequired,\n    handleNoteDelete: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default Note\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Note from './Note'\n\nconst NotesGrid = (props) => {\n    const { notes, handleNoteDelete } = props\n\n    return (\n        <div className='NotesGrid'>\n            {\n                notes.map(note => {\n                    return <Note\n                        key={note.id}\n                        id={note.id}\n                        handleNoteDelete={handleNoteDelete}\n                    >\n                        {note.text}\n                    </Note>\n                })\n            }\n        </div>\n    )\n}\n\nNotesGrid.propTypes = {\n    notes: PropTypes.array.isRequired,\n    handleNoteDelete: PropTypes.func.isRequired\n}\n\nexport default NotesGrid\n","import React, { Component } from 'react'\n\nimport NotesGrid from '../components/NotesGrid'\nimport NoteEditor from '../components/NoteEditor'\n\nimport { NOTES } from '../api/notes'\n\nimport './App.scss'\n\nclass App extends Component {\n    state = {\n        notes: NOTES,\n        text: ''\n    }\n\n    componentDidMount = () => {\n        const savedNotes = JSON.parse(localStorage.getItem('notes'))\n\n        if (savedNotes) {\n            this.setState({ notes: savedNotes })\n        }\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if (prevState.notes !== this.state.notes) {\n            this.saveToLocalStorage()\n        }\n    }\n\n    handleTextChange = (e) => {\n        this.setState({ text: e.target.value })\n    }\n\n    handleNoteAdd = () => {\n        if (this.state.text) {\n            const note = {\n                text: this.state.text,\n                id: Date.now()\n            }\n\n            this.setState({\n                notes: [note, ...this.state.notes]\n            })\n\n            this.clearText()\n        }\n    }\n\n    clearText = () => {\n        this.setState({ text: '' })\n    }\n\n    saveToLocalStorage = () => {\n        const notes = JSON.stringify(this.state.notes)\n\n        localStorage.setItem('notes', notes)\n    }\n\n    handleNoteDelete = (id) => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== id)\n        })\n    }\n\n    render() {\n        return (\n            <section className='App'>\n                <h1>React Notes</h1>\n\n                <NoteEditor\n                    text={this.state.text}\n                    handleTextChange={this.handleTextChange}\n                    handleNoteAdd={this.handleNoteAdd}\n                />\n\n                <NotesGrid\n                    notes={this.state.notes}\n                    handleNoteDelete={this.handleNoteDelete}\n                />\n            </section>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport { hot } from 'react-hot-loader'\n\nimport App from './containers/App'\n\nhot(module)(App)\n\nReactDom.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}